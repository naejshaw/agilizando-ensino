/*Para realizar a estilização de páginas, podemos utilizar o css.
Cascading Style Sheets, ou CSS, indica, ao traduzir, que será feita a leitura em cascata. Isso significa que a última estilização de um determinado elemento é a que irá prevalecer.


Existem 3 formas de aplicar o css em um documento html

- Internal: Colocando o código css dentro de uma tag style no head d arquivo HTML;
- Inline: Passando o atributo style dentro do elemento html que se deseja estilizar;
- External: Criando um arquivo styles.css externo e realizando o link entre o arquivo html e o arquivo css;*/
/*Por questões de boas práticas, buscamos adotar a terceira forma.*/
/*Dadas as três formas, existe uma ordem de prioridade em relação à estilização
Caso exista mais de uma estilização para um determinado elemento, a estilização que será priorizada é a Inline. Após esta, será priorizada a última estilização declarada dentro do head, seja ela Internal(dentro da tag style) ou external(conecataa através da tag link). E em último lugar será aplicada a estilização do navegador*/

/*Para definir uma estilização padrão, se usa o seletor * que representa o seletor universal, o que significa que a estilização dentro de {} será aplicada para todos os elementos da página*/
*{
    color: bisque;    
}

/*Para estilizar todos os elementos de um mesmo tipo, se usa o seletor com o nome do tipo do elemento. Por exemplo, se usarmos p{}, a estilização dentro de {} será aplicada para todos os elementos p da página*/
body{
    color: bisque;
}

/*Para estilizar todos os elementos de uma mesma classe, se usa o seletor "." antes do nome da classe. Por exemplo, se usarmos .menu{}, a estilização dentro de {} será aplicada para todos os elementos com a classe menu da página*/
.class{
    color: rgb(182, 61, 25);
}

/*Para estilizar um elemento específico da página, se usa o seletor "#" antes do nome de id do elemento. Por exemplo, se usarmos #banana, a estilização dentro de {} será aplicada para o elemento com id banana*/
#id{
    color: rgb(185, 5, 161);
}

/*Se houver alguma estilização em comum a vários elementos, podemos reescrever o código acima da seguinte forma*/
body, .class, #id{
    color: rgb(47, 187, 29);
}

/*É possível ainda realizar estilizações com um direcionamento específico*/
/*A estilização abaixo irá ser aplicada a todos os elementos a dentro de um elemento li que esteja dentro de uma lista ul. Esta prática pode ser aplicada em projetos menores onde não seja necessária a aplicação de classes. Contudo, a mesma estilização poderia ser feita através do uso de classes, por exemplo ul-li-a(de forma mais simplória) ou anchors-ul-items, para indicar de qual tipo de elemento a classe se refere.*/
ul li a{
    cursor: pointer;
}
/*Cores: Podemos definir o valor da cor desejada de várias formas, utilizando o código rgb, o código rgba, o código hexadecimal, o código hsl e o código hsla. Existem diversas propriedades responsáveis pela estilização de cores. As mais comuns são*/
p{
    /*Define a cor do texto (ou em alguns casos do conteúdo do elemento)*/
    color: aliceblue;
    /*Define a cor da borda do elemento, quando esta existir*/
    border-color: brown;
    /*Define a cor de fundo do elemento*/
    background-color: aquamarine;
    /*Define a cor da decoração do texto, quando esta existir*/
    text-decoration-color: yellowgreen;
}
/*Background: Podemos estilizar o background de um elemento através de seis propriedades.*/
p{
    /*Define a cor de fundo do elemento*/
    background-color: aquamarine;
    /*Define imagem de fundo do elemento*/
    background-image: url();
    /*Define como será a repetição da imagem de fundo*/
    background-repeat: no-repeat;
    /*Define se a imagem de fundo irá acompanhar o scroll da página ou se será fixada*/
    background-attachment: fixed;
    /*Define a posição da imagem de fundo*/
    background-position: center;
    /*Uma definição que agrupa as anteriores na seguinte ordem ->color->image->repeat->attachment->position. Não é necessário utilizar todas as anteriores */
    background: aquamarine url() no-repeat fixed center;
}
/*Border: Podemos definir a borda de um elemento das seguintes formas*/
div{
    /*Define a largura da borda*/
    border-width: 2px;
    /*Define o estilo da borda */
    border-style: dotted;
    /*Define a cor da borda */
    border-color: yellowgreen;
    /*Uma definição que agrupa as anteriores é a border, onde o style é obrigatório*/
    border: 5px solid green;
    /*Define o aredondamento da borda*/
    border-radius: 5px;
}
/*Margin: usada para criar um espaço ao redor dos elementos, fora de qualquer borda definida*/
p {
    /*Define margem superior*/
    margin-top: 25px;
    /*Define a margem à direita*/
    margin-right: 50px;
    /*Define a margem inferior*/
    margin-bottom: 75px;
    /*Define a margem à esquerda*/
    margin-left: 100px;
    /*Define a margem em uma só propriedade, na ordem top->right->bottom->left*/
    margin: 25px 50px 75px 100px;
    /*Define a margem em uma só propriedade, na ordem vertical->horizontal*/
    margin: 25px 50px /*se usarmos o valor auto irá centralizar horizontalmente o elemento*/;
  }
/*Padding: usada para criar um espaço ao redor dos elementos, dentro de qualquer borda definida*/
p {
    /*Define um preenchimento superior*/
    padding-top: 25px;
    /*Define um preenchimento à direita*/
    padding-right: 50px;
    /*Define um preenchimento inferior*/
    padding-bottom: 75px;
    /*Define um preenchimento à esquerda*/
    padding-left: 100px;
    /*Define um preenchimento em uma só propriedade, na ordem top->right->bottom->left*/
    padding: 25px 50px 75px 100px;
    /*Define um preenchimento em uma só propriedade, na ordem vertical->horizontal*/
    padding: 25px 50px ;
  }
/*Height e Width: usadas para definir a altura e a largura do elemento, respectivamente*/
div {
    height: 100px;
    width: 500px;
    /*Define a largura máxima que o elemento pode alcançar*/
    max-width: max-content;
  }
/*Outline: usado para desenhar uma linha ao redor dos elementos, fora das bordas, para destacar os elementos. Não é considerado parte do elemento, podendo sobrepor outros elementos*/
div{
    /*Define o estilo da linha externa */
    outline-style: dotted;
    /*Define a largura da linha externa*/
    outline-width: thin;
    /*Define a cor da linha externa */
    outline-color: antiquewhite;
    /*Uma definição que agrupa as anteriores é a outline, onde o style é obrigatório*/
    outline: double thick crimson;
    /*Adiciona um espaço entre uma linha externa e a borda de um elemento.*/
    outline-offset: unset;
}
/*Texts: existem algumas propriedades para formatar textos*/
p{
    /*Define a cor do texto*/
    color: white;
    /*Define o alinhamento do texto*/
    text-align: center;
    /*Define uma linha de decoração para o texto*/
    text-decoration: wavy;
    /*Define se as letras serão minúsculas, maiúsculas ou se todas as palavras terão apenas a primeira letra em maiúsculo*/
    text-transform: capitalize;
    /*Define o espaçamento entre as letras*/
    letter-spacing: 2px;
    /*Define o espaçamento entre as linhas*/
    line-height: 2px;
    /*Define o sombreamento do texto*/
    text-shadow: 2px 2px;
}
/*Fonts: existem algumas propriedades para formatas as fonts dos texto*/
p{
    /*Define a família da fonte a ser utilizada*/
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    /*Define o tamanho da fonte*/
    font-size: medium;
    /*Define o peso da fonte*/
    font-weight: lighter;
    font-style: italic;
    /*Podemos agrupar as definições através da propriedade font, onde size e family são obrigatórios*/
    font: italic small-caps bold 12px/30px Georgia, serif;
}
/*Links: podemos estilizar os links do site de um modo geral, usando o seletor a. Ou de acordo com o estado do link*/
a{
    color: blue;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    background: turquoise;
}
/* link não acessado */
a:link {
    color: red;
  }
  
  /* link acessado */
  a:visited {
    color: green;
  }
  
  /* mouse sobre o link */
  a:hover {
    color: hotpink;
  }
  
  /* link selecionado */
  a:active {
    color: blue;
  }
/*Lists: podemos estilizar os marcados das listas ordenadas e não ordenadas, assim como configurar uma imagem para ser o marcador, configurar uma cor de fundo ou mesmo o posicionamento dos marcadores*/
ul.a {
    /*Define o estilo do marcador*/
    list-style-type: circle;
    /*Define o posicionamento do marcador*/
    list-style-position: outside;
    /*Define a cor de fundo do elemento */
    background: #ffe5e5;
    /*Define a imagem do marcador*/
    list-style-image: url('sqpurple.gif');
}  
ol.c {
    /*Define o estilo do marcador*/
    list-style-type: upper-roman;
    /*Define o posicionamento do marcador*/
    list-style-position: inside;
    /*Define a cor de fundo do elemento */
    background: #3399ff;
}
ul {
    /*Define as propriedades em uma única linha */
    list-style: square inside url("sqpurple.gif");
}
/*Tables*/
/*Display*/
/*Position*/
/*Z-Index*/
/*Overflow*/
/*Float*/
/*Inline-Block*/
/*Align*/
/*Opacity*/
/*Navigation Bar*/
/*Dropdowns*/
/*Forms*/
/*Counters*/
/*Units*/
/*!important*/
/**/
/**/
/**/
/**/